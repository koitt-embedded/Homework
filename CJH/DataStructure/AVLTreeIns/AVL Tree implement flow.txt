* 삽입 구현

*자연어

어떤 값이 들어오면 이진 트리와 마찬가지로 자신의 위치를 찾아 저장한다.
루트부터 저장된 자신의 부모 노드까지의 높이를 갱신한다.
높이 갱신은 갱신할 노드의 좌측 서브트리 높이에서 우측 서브트리의 높이를 뺀 값으로 한다.
저장된 자신의 부모 노드부터 루트까지 높이를 갱신할 때 최초로 높이 차이가 2 이상인 노드가 있다면
그 노드를 기준으로 회전을 한다.
회전이 이뤄지면 그 회전이 이뤄진 노드들 중의 루트 노드를 기준으로 루트 노드와 그 루트노드의 서브트리들의 루트 노드 높이를 갱신한다.

*처리과정

1. 데이터를 입력 받아 저장한다.
1-1. 입력 받은 데이터가 이미 저장된 노드들의 데이터보다 큰지 작은지에 따라 비교된 노드들의 왼쪽 혹은 오른쪽 링크에 저장된 노드와 또 다시 비교한다.
1-2. 루트 노드부터 입력 받은 데이터가 위치 할(노드와의 비교 결과로 나온 왼쪽 혹은 오른쪽 결과에 따른 왼쪽, 오른쪽 링크의 값이 NULL인 경우) 곳에 노드를 만든다.(입력 받은 데이터를 기준으로 만든 노드를 그 노드의 부모 노드의 좌 또는 우 링크에 저장한다.)

2. 루트노드부터 입력된 데이터를 가진 노드의 부모 노드까지의 레벨을 갱신한다.
2-1. 입력 받은 데이터가 루트 노드부터 비교되면서 자신의 위치를 찾을 때, 스택을 만들어 루트 노드부터 입력된 데이터를 가진 노드의 부모 노드까지 모두 담는다.
2-2. 노드 삽입이 끝나면 스택의 노드들을 순회하며 레벨 값을 갱신한다.
2-2-1. 레벨 값은 갱신할 노드의 좌우측 서브 트리 높이의 차로 계산한다.
2-2-2. 높이는 맨 아래 잎 노드부터 그 노드의 부모 노드로 올라가면서 1씩 증가한다.
2-2-3. 단, 부모 노드로 올라갈 때 자신 노드가 부모 노드의 좌측에 위치하면 양수, 우측에 위치하면 음수가 된다.

3. 높이 갱신 시 레벨 값이 2(또는 -2) 이상 발생하면 회전이 필요하다.
3-1. 입력된 데이터를 가진 노드의 부모 노드부터 루트 노드까지 순회하면서 레벨 값을 갱신 하다가 최초로 레벨 값 차이가 2 또는 -2이면 그 노드부터 아래 두 노드에 대해 회전을 실시한다.
3-2. 회전은 4가지 경우에 따라 각기 다른 회전을 하는데 LL, LR, RR, RL 회전이 그것이다.
3-3-1. 레벨 값이 +2 이상이면 회전이 필요한 루트 노드로부터 왼쪽 서브 트리의 노드들 때문에 높이 불균형이 생긴 것이다.
3-3-2. 루트 노드의 왼쪽 서브 트리의 루트 노드의 레벨 값이 양수이면 LL 회전, 음수이면 LR 회전이 필요하다.
3-3-3. 레벨 값이 -2 이상이면 회전이 필요한 루트 노드로부터 오른쪽 서브 트리의 노드들 때문에 
높이 불균형이 생긴 것이다.
3-3-4. 루트 노드의 오른쪽 서브 트리의 루트 노드의 레벨 값이 음수이면 RR 회전, 양수이면 RL 회전이 필요하다.

4. LL, LR, RR, RL 회전을 실시한다.
case 1) 회전이 필요한 트리의 루트 노드의 부모 노드의 링크 값을 루트 노드의 주소로 바꾸는 경우
case 2) 루트 노드와 그 아래 노드의 위치를 바꾸는 경우
아래는 case 1)로 진행한다.
4.1 LL 회전
4.1.1 회전이 필요한 노드들과 그 노드들의 최상위 노드의 부모 노드의 링크 중 최상위 노드와 연결된 링크를 가지고 회전한다.
4.1.2 부모 노드의 링크 값을 P, 회전할 최상위 노드를 1, 그 아래 노드를 2, 그 아래 노드를 3,
그리고 1의 우측 자식 노드를 a, 2의 우측 자식 노드를 b라 할 때
P에 2의 주소를 저장하게 하고 1의 왼쪽 링크 값을 b의 주소값으로 바꾼다.
마지막으로 2의 오른쪽 링크 값을 1의 주소값으로 바꾼다.
4.2 RR 회전
4.2.1 회전이 필요한 노드들과 그 노드들의 최상위 노드의 부모 노드의 링크 중 최상위 노드와 연결된 링크를 가지고 회전한다.
4.1.2 부모 노드의 링크 값을 P, 회전할 최상위 노드를 1, 그 아래 노드를 2, 그 아래 노드를 3,
그리고 1의 좌측 자식 노드를 a, 2의 좌측 자식 노드를 b라 할 때
P에 2의 주소를 저장하게 하고 1의 오른쪽 링크 값을 b의 주소값으로 바꾼다.
마지막으로 2의 왼쪽 링크 값을 1의 주소값으로 바꾼다.
4.3 LR 회전
4.3.1 불균형이 생긴 노드의 왼쪽 링크를 P로 하고 이 노드의 왼쪽 자식 노드를 1, 그 왼쪽 자식의 오른쪽 자식을 2로 하는 RR 회전을 실시한다.
4.3.2 불균형이 생긴 노드부터 그 자식 노드, 그 손자 노드에 대해 LL 회전이 필요한 불균형한 트리 형태가 나타나게 되고, 이에 대해 LL 회전을 실시한다.
4.4 RL 회전
4.3.1 불균형이 생긴 노드의 오른쪽 링크를 P로 하고 이 노드의 오른쪽 자식 노드를 1, 그 오른쪽 자식의 왼쪽 자식을 2로 하는 LL 회전을 실시한다.
4.3.2 불균형이 생긴 노드부터 그 자식 노드, 그 손자 노드에 대해 RR 회전이 필요한 불균형한 트리 형태가 나타나게 되고, 이에 대해 RR 회전을 실시한다.

5. 회전 후 높이 값 갱신
회전에 의해 서브트리의 높이가 달라졌으므로 높이 값 갱신이 필요하다.
5.1 불균형이 생긴(레벨 값이 최초로 2 또는 -2가 된) 노드와 그 노드의 좌우측 자식 노드들에 대해 레벨 값 갱신을 실시한다.
5.2 좌우측 노드들에 대해, 그 각각 노드의 좌우측 자식 노드들의 레벨 값을 빼준다.((좌측 자식 노드의 레벨 +1) - (우측 자식 노드의 레벨 -1))
5.2.1 이때 좌측 혹은 우측 자식 노드가 없으면 높이가 0이다.